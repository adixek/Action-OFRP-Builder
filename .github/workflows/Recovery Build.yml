name: Xiaomi Pad 6 Kernel Builder

on:
  push:
    paths:
      - '.github/workflows/pipa.yml'
      - 'build.sh'
  workflow_dispatch:
    inputs:
      upload_release:
        description: 'Upload to Releases'
        type: boolean
        required: true
        default: false
      build_up_to_commit:
        description: 'Build up to specific commit (leave empty for HEAD)'
        type: string
        required: false
      enable_ksu:
        description: 'Enable KernelSU support'
        type: boolean
        required: false
        default: false

permissions:
  contents: write

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-24.04
    env:
      TZ: Asia/Taipei
      DEVICE_CODENAME: pipa
      KERNEL_SOURCE: https://github.com/pipa-random/android_kernel_xiaomi_sm8250.git
      TOOLCHAIN_PATH: ${{ github.workspace }}/proton-clang/proton-clang-20210522/bin
      CCACHE_DIR: ${{ github.workspace }}/.cache/ccache_mikernel
      
    steps:
      - name: Checkout workflow files
        uses: actions/checkout@v4
        with:
          path: workflow-files

      - name: Cleanup workspace
        uses: rokibhasansagar/slimhub_actions@main

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git curl wget bison flex zip bc cpio libssl-dev ccache python-is-python3

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Clone kernel source
        run: |
          git clone --depth=1 $KERNEL_SOURCE kernel
          cd kernel
          if [ -n "${{ github.event.inputs.build_up_to_commit }}" ]; then
            git fetch --depth=1 origin ${{ github.event.inputs.build_up_to_commit }}
            git checkout ${{ github.event.inputs.build_up_to_commit }}
          fi
          echo "KERNEL_COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Copy build script
        run: |
          cp workflow-files/build.sh kernel/
          chmod +x kernel/build.sh

      - name: Install Proton Clang
        run: |
          mkdir -p proton-clang
          cd proton-clang
          wget https://github.com/kdrag0n/proton-clang/archive/refs/tags/20210522.zip
          unzip 20210522.zip
          cd ..

      - name: Set up ccache
        run: |
          mkdir -p $CCACHE_DIR
          echo "CCACHE_DIR=$CCACHE_DIR" >> $GITHUB_ENV
          echo "/usr/lib/ccache" >> $GITHUB_PATH

      - name: Build Kernel
        working-directory: ./kernel
        run: |
          export PATH="$TOOLCHAIN_PATH:$PATH"
          ./build.sh

      - name: Rename artifact with commit info
        run: |
          cd kernel
          for f in *.zip; do
            new_name="${f%.zip}-$KERNEL_COMMIT.zip"
            mv "$f" "$new_name"
          done

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DEVICE_CODENAME }}-kernel-${{ env.KERNEL_COMMIT }}
          path: kernel/*.zip

      - name: Upload to Releases
        if: (github.event_name == 'push' && startsWith(github.event.head_commit.message, '[release] ')) || github.event.inputs.upload_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.DEVICE_CODENAME }}-${{ env.KERNEL_COMMIT }}
          files: kernel/*.zip
          name: ${{ env.DEVICE_CODENAME }}-kernel-${{ env.KERNEL_COMMIT }}
          body: |
            Kernel build for ${{ env.DEVICE_CODENAME }}
            Commit: ${{ env.KERNEL_COMMIT }}
            KernelSU: ${{ github.event.inputs.enable_ksu }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
